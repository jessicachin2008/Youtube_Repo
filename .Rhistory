arrange(desc(num_affected)) %>%
select(city) %>%
head(1)
# The city that was most impacted by the shootings was the total number of injuries and deaths in that row.
most_shootings_state <- shooting_data %>%
group_by(state) %>%
count(vars = "count_of_state") %>%
arrange(desc(n)) %>%
select(state) %>%
head(1) %>%
unlist
# The number of counts of mass shootings per state.
most_lives_lost_date <- shooting_data %>%
arrange(desc(num_killed)) %>%
select(date) %>%
head(1) %>%
unlist
# The date of when the most amount of people were killed.
content <- paste(shooting_data$city,
shooting_data$address,
shooting_data$date, sep = "<br/>")
interactive_map <- leaflet(shooting_data) %>%
addTiles %>%
addCircleMarkers(
radius = ~(shooting_data$num_killed + shooting_data$num_injured),
stroke = FALSE, fillOpacity = 0.5
) %>%
addCircles(popup = ~content)
num_affected <- shooting_data$num_injured + shooting_data$num_killed
other_plot <- ggplot(shooting_data) +
geom_col(mapping = aes(x = state, y = num_affected)) +
coord_flip()
source('C:/Users/Jessica/Desktop/School/Junior/Coding/a5-b-jessicachin2008/analysis.R')
source('C:/Users/Jessica/Desktop/School/Junior/Coding/a5-b-jessicachin2008/analysis.R')
View(other_plot)
other_plot
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(error = TRUE)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(leaflet)
shooting_data <- read_csv("data/shootings-2018.csv")
source("analysis.R")
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(error = TRUE)
date_of_event <- shooting_data %>%
filter(num_killed == "13")
View(date_of_event)
date_of_event <- shooting_data %>%
filter(num_killed == "13") %>%
select(date)
View(date_of_event)
date_of_event <- shooting_data %>%
filter(num_killed == "13") %>%
select(date) %>%
unlist
print(date_of_event)
location_of_event <- shooting_data %>%
filter(date == date_of_event) %>%
select(state, city)
View(location_of_event)
location_of_event <- shooting_data %>%
filter(date == date_of_event) %>%
select(state, city) %>%
unlist
print(lovation_of_event)
print(location_of_event)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(leaflet)
shooting_data <- read_csv("data/shootings-2018.csv")
total_num_shootings <- shooting_data %>% nrow
lives_lost <- sum(shooting_data$num_killed)
most_impacted_city <- mutate(
shooting_data,
num_affected = num_killed + num_injured) %>%
group_by(city) %>%
arrange(desc(num_affected)) %>%
select(city) %>%
head(1)
# The city that was most impacted by the shootings was the total number of injuries and deaths in that row.
most_shootings_state <- shooting_data %>%
group_by(state) %>%
count(vars = "count_of_state") %>%
arrange(desc(n)) %>%
select(state) %>%
head(1) %>%
unlist
# The number of counts of mass shootings per state.
most_lives_lost_date <- shooting_data %>%
arrange(desc(num_killed)) %>%
select(date) %>%
head(1) %>%
unlist
# The date of when the most amount of people were killed.
date_of_event <- shooting_data %>%
filter(num_killed == "13") %>%
select(date) %>%
unlist
location_of_event <- shooting_data %>%
filter(date == date_of_event) %>%
select(state, city) %>%
unlist
num_killed_event <- 13
num_injured_event <- 2
content <- paste(shooting_data$city,
shooting_data$address,
shooting_data$date, sep = "<br/>")
interactive_map <- leaflet(shooting_data) %>%
addTiles %>%
addCircleMarkers(
radius = ~(shooting_data$num_killed + shooting_data$num_injured),
stroke = FALSE, fillOpacity = 0.5
) %>%
addCircles(popup = ~content)
num_affected <- shooting_data$num_injured + shooting_data$num_killed
other_plot <- ggplot(shooting_data) +
geom_col(mapping = aes(x = state, y = num_affected)) +
coord_flip()
source('C:/Users/Jessica/Desktop/School/Junior/Coding/a5-b-jessicachin2008/analysis.R')
source('C:/Users/Jessica/Desktop/School/Junior/Coding/a5-b-jessicachin2008/analysis.R')
source('C:/Users/Jessica/Desktop/School/Junior/Coding/a5-b-jessicachin2008/analysis.R')
summary_table <- group_by(state) %>%
summarize(
shooting_data,
sum_of_killed = sum(num_killed),
sum_of_injured = sum(num_injured)
)
summary_table <- shooting_data %>%
group_by(state) %>%
summarize(
shooting_data,
sum_of_killed = sum(num_killed),
sum_of_injured = sum(num_injured)
)
summary_table <- shooting_data %>%
group_by(state) %>%
summarize(
sum_of_killed = sum(num_killed),
sum_of_injured = sum(num_injured)
)
View(summary_table)
source('C:/Users/Jessica/Desktop/School/Junior/Coding/a5-b-jessicachin2008/analysis.R')
summary_table
summary_table <- shooting_data %>%
group_by(state) %>%
summarize(
sum_of_killed = sum(num_killed),
sum_of_injured = sum(num_injured)
) %>%
arrange(desc(num_killed))
summary_table <- shooting_data %>%
group_by(state) %>%
summarize(
sum_of_killed = sum(num_killed),
sum_of_injured = sum(num_injured)
) %>%
arrange(desc(sum_of_killed))
summary_table <- shooting_data %>%
group_by(state) %>%
summarize(
date,
sum_of_killed = sum(num_killed),
sum_of_injured = sum(num_injured)
) %>%
arrange(desc(sum_of_killed))
source('C:/Users/Jessica/Desktop/School/Junior/Coding/a5-b-jessicachin2008/analysis.R')
library(dplyr)
library(tidyverse)
library(ggplot2)
library(leaflet)
shooting_data <- read_csv("data/shootings-2018.csv")
total_num_shootings <- shooting_data %>% nrow
lives_lost <- sum(shooting_data$num_killed)
most_impacted_city <- mutate(
shooting_data,
num_affected = num_killed + num_injured) %>%
group_by(city) %>%
arrange(desc(num_affected)) %>%
select(city) %>%
head(1)
# The city that was most impacted by the shootings was the total number of injuries and deaths in that row.
most_shootings_state <- shooting_data %>%
group_by(state) %>%
count(vars = "count_of_state") %>%
arrange(desc(n)) %>%
select(state) %>%
head(1) %>%
unlist
# The number of counts of mass shootings per state.
most_lives_lost_date <- shooting_data %>%
arrange(desc(num_killed)) %>%
select(date) %>%
head(1) %>%
unlist
# The date of when the most amount of people were killed.
summary_table <- shooting_data %>%
group_by(state) %>%
summarize(
sum_of_killed = sum(num_killed),
sum_of_injured = sum(num_injured)
) %>%
arrange(desc(sum_of_killed))
date_of_event <- shooting_data %>%
filter(num_killed == "13") %>%
select(date) %>%
unlist
location_of_event <- shooting_data %>%
filter(date == date_of_event) %>%
select(state, city) %>%
unlist
num_killed_event <- shooting_data %>%
filter(date == date_of_event) %>%
select(num_killed) %>%
unlist
num_injured_event <- shooting_data %>%
filter(date == date_of_event) %>%
select(num_injured) %>%
unlist
content <- paste(shooting_data$city,
shooting_data$address,
shooting_data$date, sep = "<br/>")
interactive_map <- leaflet(shooting_data) %>%
addTiles %>%
addCircleMarkers(
radius = ~(shooting_data$num_killed + shooting_data$num_injured),
stroke = FALSE, fillOpacity = 0.5
) %>%
addCircles(popup = ~content)
num_affected <- shooting_data$num_injured + shooting_data$num_killed
other_plot <- ggplot(shooting_data) +
geom_col(mapping = aes(x = state, y = num_affected)) +
coord_flip()
source('C:/Users/Jessica/Desktop/School/Junior/Coding/a5-b-jessicachin2008/analysis.R')
summary_table <- shooting_data %>%
group_by(state) %>%
summarize(
sum_of_killed = sum(num_killed),
sum_of_injured = sum(num_injured)
) %>%
mutate(
sum_of_affected = sum(sum_of_killed + sum_of_injured)
)
summary_table <- shooting_data %>%
group_by(state) %>%
summarize(
sum_of_killed = sum(num_killed),
sum_of_injured = sum(num_injured)
) %>%
arrange(desc(sum_of_killed))
source('C:/Users/Jessica/Desktop/School/Junior/Coding/a5-b-jessicachin2008/analysis.R')
View(summary_table)
interactive_map <- leaflet(shooting_data) %>%
addTiles %>%
addCircleMarkers(
radius = ~(shooting_data$num_killed + shooting_data$num_injured),
stroke = FALSE, fillOpacity = 0.5
) %>%
addCircles(popup = ~content)
View(interactive_map)
interactive_map
source('C:/Users/Jessica/Desktop/School/Junior/Coding/a5-b-jessicachin2008/analysis.R')
# Summary table
summary_table <- shooting_data %>%
group_by(state) %>%
summarize(
sum_of_killed = sum(num_killed),
sum_of_injured = sum(num_injured)
) %>%
arrange(desc(sum_of_killed)) %>%
head(6)
# Summary table
summary_table <- shooting_data %>%
group_by(state) %>%
summarize(
sum_of_killed = sum(num_killed),
sum_of_injured = sum(num_injured)
) %>%
arrange(desc(sum_of_killed)) %>%
head(7)
# Summary table
summary_table <- shooting_data %>%
group_by(state) %>%
summarize(
sum_of_killed = sum(num_killed),
sum_of_injured = sum(num_injured)
) %>%
arrange(desc(sum_of_killed)) %>%
head(10)
source('C:/Users/Jessica/Desktop/School/Junior/Coding/a5-b-jessicachin2008/analysis.R')
source('C:/Users/Jessica/Desktop/School/Junior/Coding/a5-b-jessicachin2008/analysis.R')
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
source("analysis.R")
?merge
a <- 1000
b <- "super cool"
c <- TRUE
typeof(a)
typeof(b)
typeof(c)
my_scalar <- 45
my_vector <- c(45, 32, 31, 10000)
length(my_scalar)
length(my_vector)
my_new_vector <- c(45, 4.5, "450")
typeof(my_new_vector)
my_matrix <- matrix(1:20, nrow=5,ncol=4)
my_matrix
typeof(my_matrix)
# grab the third item in my_new_vector
my_new_vector[3]
# grab the item in the third row and second colum of my_matrix
my_matrix[3, 2]
# grab the whole second row of my_matrix
my_matrix[, 2]
my_favorite_things <- list("ice cream", "chocolate", "food")
mutate(tree_ages, tree_id)
library(tidyverse)
tree_id <- c(1, 2, 3, 4) # set tree ids from 1-4
tree_heights <- c(19, 20, 35, 5) # real measured tree heights that I made with a measuring tape
tree_ages <- c(40, 35, 60, 4) # I asked each tree
tree_names <- c("oak", "poplar", "willow", "beech") # two of these trees really like Pokemon
tree_data <- data_frame(tree_id, tree_heights, tree_ages, tree_names)
tree_data
mutate(tree_ages, tree_id)
mutate(tree_ages, tree_heights)
tree_data %>% mutate(feet_grown_per_year = tree_heights / tree_ages)
library(gapminder)
View(gapminder)
library(forcats)
levels(gapminder)
levels(gapminder$country)
gapminder %>%
# filter to one year, it doesn't matter which
filter(year == "2007") %>%
ggplot(aes(x = continent)) +
geom_bar()
gapminder %>%
filter(year == "2007") %>%
mutate(continent = fct_infreq(continent)) %>%
ggplot(aes(x = continent)) +
geom_bar()
# more concise, but messier:
# gapminder %>%
#   filter(year == "2007") %>%
#   ggplot(aes(x = fct_infreq(continent))) +
#   geom_bar()
gapminder %>%
filter(year == "2007") %>%
mutate(continent = fct_rev(fct_infreq(continent))) %>%
ggplot(aes(x = continent)) +
geom_bar()
gapminder %>%
filter(year == "2007") %>%
mutate(continent = fct_rev(fct_infreq(continent))) %>%
ggplot(aes(x = continent)) +
geom_bar() +
coord_flip() +
labs(title = "How many countries per continent?",
subtitle = "Countries with complete data, Gapminder")
library(gapminder)
glimpse(gapminder)
library(forcats)
gapminder_asia_2007 <- gapminder %>% filter(year == 2007)
gapminder_asia_2007 <- gapminder %>% filter(year == 2007)
gapminder_asia_2007 %>%
ggplot(aes(lifeExp, country)) +
geom_point()
gapminder_asia_2007 %>%
ggplot(aes(lifeExp,
fct_reorder(country, lifeExp),
color = pop)) +
geom_point()
gapminder_asia_2007 <- gapminder %>% filter(year == 2007, continent == 'Asia')
gapminder_asia_2007 %>%
ggplot(aes(lifeExp, country)) +
geom_point()
gapminder_asia_2007 %>%
ggplot(aes(lifeExp,
fct_reorder(country, lifeExp),
color = pop)) +
geom_point()
tree_data <- tree_names %>% mutate(tree_names = as_fator(tree_names))
tree_data <- tree_data %>% mutate(tree_names = as_fator(tree_names))
tree_data <- tree_data %>% mutate(tree_names = as_factor(tree_names))
tree_data %>% ggplot(aes(tree_names, tree_heights)) + geom_bar()
tree_data %>% ggplot(aes(tree_names, tree_heights)) + geom_col()
tree_data %>% ggplot(aes(tree_names, tree_heights), fct_reorder(tree_heights)) + geom_col()
tree_data %>% ggplot(aes(tree_names, tree_heights), fct_reorder(tree_heights, tree_names)) + geom_col()
tree_data %>% ggplot(aes(tree_names, tree_heights), fct_infreq(tree_heights)) + geom_col()
library(stringr)
glimpse(stringr)
View(stringr)
View("stringr")
View(fruit)
str_c("pine", "apple")
str_c("pine", "apple", "s")
str_c("crab", "apple", sep = " ")
str_c(c("pine", "crab"), "apple")
str_c(c("pine", "crab"), "apple", collapse = " ")
str_c(c(fruit), sep = ", ")
str_c(c(fruit), collapse = ", ")
str_subset(fruit, "^a")
str_detect(fruit, "^a")
fruit_data <- data_frame(fruit)
fruit_data <- data.frame(fruit)
fruit_data %>%
filter(str_detect(fruit, "^a"))
fruit_data <- data_frame(fruit)
fruit_data <- data_frame(fruit)
library(tidyverse)
fruit_data <- data_frame(fruit)
fruit_data %>%
filter(str_detect(fruit, "^a"))
str_subset(fruit, $a)
str_subset(fruit, "$a")
str_subset(fruit, "a$")
str_subset(fruit, "a$")
fruit_data $>$
str_subset(fruit, "a$")
fruit_data %>%
filter(str_detect(fruit, "a$"))
str_extract(fruit, "fruit|berry|melon")
library(gapminder)
glimpse(gapminder)
library(forcats)
fruit_data %>%
str_extract(fruit, "fruit|berry|melon") %>%
ggplot(aes(x = fruit, y = count)) +
geom_bar()
fruit_data %>%
#str_extract(fruit, "fruit|berry|melon") %>%
ggplot(aes(x = fruit, y = count)) +
geom_bar()
fruit_data %>%
#str_extract(fruit, "fruit|berry|melon") %>%
ggplot(aes(x = fruit)) +
geom_bar()
fruit_data %>%
str_extract(fruit, "fruit|berry|melon") %>%
ggplot(aes(x = fruit)) +
geom_bar()
str_extract(fruit, "fruit|berry|melon") %>%
ggplot(aes(x = fruit)) +
geom_bar()
extracted <- data_frame(str_extract(fruit, "fruit|berry|melon")) %>%
# str_extract(fruit, "fruit|berry|melon") %>%
ggplot(aes(x = fruit)) +
geom_bar()
extracted <- data_frame(str_extract(fruit, "fruit|berry|melon"))
extracted %>%
# str_extract(fruit, "fruit|berry|melon") %>%
ggplot(aes(x = fruit)) +
geom_bar()
View(extracted)
extracted <- data_frame(str_extract(fruit, "fruit|berry|melon"))
extracted %>%
# str_extract(fruit, "fruit|berry|melon") %>%
ggplot(aes(x = extracted)) +
geom_bar()
extracted <- data_frame(summarize(str_extract(fruit, "fruit|berry|melon")))
extracted <- data_frame(str_extract(fruit, "fruit|berry|melon")) %>%
summarize()
View(extracted)
extracted <- data_frame(str_extract(fruit, "fruit|berry|melon"))
View(extracted)
listed <- str_extract(fruit, "fruit|berry|melon")
str_extract(fruit, "fruit|berry|melon")
extracted <- data_frame(str_extract(fruit, "fruit|berry|melon")) %>%
count(vars = "total")
View(extracted)
extracted <- data_frame(str_extract(fruit, "fruit|berry|melon")) %>%
summarize(count())
extracted <- data_frame(str_extract(fruit, "fruit|berry|melon")) %>%
summarize(count(fruit))
extracted <- summarize(count(data_frame(str_extract(fruit, "fruit|berry|melon"))))
View(extracted)
extracted <- count(data_frame(str_extract(fruit, "fruit|berry|melon")))
View(extracted)
extracted <- data_frame(str_extract(fruit, "fruit|berry|melon")) %>%
sum(str_count())
extracted <- data_frame(str_extract(fruit, "fruit|berry|melon")) %>%
View(extracted)
extracted <- data_frame(str_extract(fruit, "fruit|berry|melon")) %>%
mutate(sum = sum(str_count("fruit")))
View(extracted)
shiny::runApp('C:/Users/Jessica/Desktop/School/Junior/INFO Group/team_won')
runApp('C:/Users/Jessica/Desktop/School/Junior/INFO Group/team_won')
setwd("C:/Users/Jessica/Desktop/School/Junior/INFO Group/team_won")
sleep_data <- read.csv("data/sleep_study.csv") %>%
select(GPA, DepressionScore, AnxietyScore,
StressScore, AlcoholUse, AverageSleep, Drinks)
combined_sleep_data <- read.csv("data/combined_sleep_gpa.csv")
runApp()
runApp()
lintr:::addin_lint()
runApp()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
runApp()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
runApp()
